---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: build-cluster-worker
  name: build-cluster-worker
  namespace: ${SD_K8S_NAMESPACE}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: build-cluster-worker
  namespace: ${SD_K8S_NAMESPACE}
  labels:
    k8s-app: build-cluster-worker
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection", "proxy"]
  - apiGroups: [""]
    resources: ["pods/status"]
    verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: build-cluster-worker
  namespace: ${SD_K8S_NAMESPACE}
  labels:
    k8s-app: build-cluster-worker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: build-cluster-worker
subjects:
  - kind: ServiceAccount
    name: build-cluster-worker
    namespace: ${SD_K8S_NAMESPACE}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: build-cluster-worker-${CLUSTER_NAME}
  namespace: ${SD_K8S_NAMESPACE}
  labels:
    app: build-cluster-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: build-cluster-worker
  template:
    metadata:
      labels:
        app: build-cluster-worker
    spec:
      serviceAccountName: build-cluster-worker
      containers:
        - name: screwdriver-build-cluster-worker
          image: screwdrivercd/buildcluster-queue-worker:v1.11.0
          imagePullPolicy: IfNotPresent
          env:
            - name: CIRCUIT_TIMEOUT
              value: "20000"
            # Available launcher versions: https://hub.docker.com/r/screwdrivercd/launcher/tags, please consult Screwdriver for what version to be used
            - name: LAUNCH_VERSION
              value: latest
            - name: ECOSYSTEM_API
              value: https://${SD_API_HOST}
            - name: ECOSYSTEM_STORE
              value: https://${SD_STORE_HOST}
              # https://applatix.com/case-docker-docker-kubernetes-part-2/
            - name: DOCKER_FEATURE_ENABLED
              value: "true"
            - name: K8S_SERVICE_ACCOUNT_NAME
              value: build-cluster-worker
            - name: K8S_AUTOMOUNT_SERVICE_ACCOUNT_TOKEN
              value: "true"
            - name: K8S_JOBS_NAMESPACE
              value: ${SD_K8S_NAMESPACE}
            - name: EXECUTOR_PLUGIN
              value: k8s
            - name: EXECUTOR_PREFIX
              value: "beta-"
            - name: K8S_CPU_LOW
              value: "1"
            - name: K8S_CPU_HIGH
              value: "2"
            - name: K8S_CPU_TURBO
              value: "4"
            - name: K8S_MEMORY_LOW
              value: "2"
            - name: K8S_MEMORY_HIGH
              value: "4"
            - name: K8S_MEMORY_TURBO
              value: "8"
            - name: LOG_LEVEL
              value: debug
            - name: RABBITMQ_PROTOCOL
              value: amqps
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                key: username
                name: build-cluster-worker-secrets
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                key: password
                name: build-cluster-worker-secrets
            - name: RABBITMQ_HOST
              value: ${SD_RABBITMQ_HOST}
            - name: RABBITMQ_PORT
              value: "9000"
            - name: RABBITMQ_VIRTUAL_HOST
              value: /screwdriver
            - name: RABBITMQ_QUEUE
              value: ${SD_RABBITMQ_QUEUE_NAME}
            - name: RABBITMQ_CONNECT_OPTIONS
              value: "{ json: true, heartbeatIntervalInSeconds: 20, reconnectTimeInSeconds: 30 }"
            - name: RABBITMQ_QUEUE_OPTIONS
              value: "{ durable: true, autodelete: false, deadLetterExchange: 'build', deadLetterRoutingKey: '${SD_RABBITMQ_DLQ_NAME}' }"
            - name: RABBITMQ_PREFETCH_COUNT
              value: "20"
            - name: RABBITMQ_MSG_REPROCESS_LIMIT
              value: "3"
            - name: CACHE_STRATEGY
              value: s3
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - pgrep -xf 'node index.js' | xargs kill; sleep 5
